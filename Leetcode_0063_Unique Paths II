63. Unique Paths II

class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        nr = len(obstacleGrid)
        nc = len(obstacleGrid[0])

        if obstacleGrid[0][0] == 1:
            return 0
        
        for i in range(nr):
            for j in range(nc):
                if i == 0 or j == 0:
                    if obstacleGrid[i][j] == 1 or ((i != 0) and obstacleGrid[i-1][0] == 0) or (j != 0 and obstacleGrid[i][j - 1] == 0):
                        obstacleGrid[i][j] = 0
                    else:
                        obstacleGrid[i][j] = 1
                
                else:
                    if obstacleGrid[i][j] == 1:
                        obstacleGrid[i][j] = 0
                    else:
                        obstacleGrid[i][j] = obstacleGrid[i-1][j] + obstacleGrid[i][j -  1]

        return obstacleGrid[-1][-1] 
