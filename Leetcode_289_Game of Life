#289. Game of Life

def gameOfLife(self, board: List[List[int]]) -> None:
    """
    Do not return anything, modify board in-place instead.
    """
    def livecnt(i, j, dup):
        cnt = 0
        if i+1 < nr and dup[i+1][j] == 1:
            cnt += 1
        if i-1 >= 0 and dup[i-1][j] == 1:
            cnt += 1
        if j+1 < nc and dup[i][j+1] == 1:
            cnt += 1
        if j-1 >= 0 and dup[i][j-1] == 1:
            cnt += 1
        if i-1 >= 0 and j-1 >= 0 and dup[i-1][j-1] == 1:
            cnt += 1
        if i-1 >= 0 and j+1 < nc and dup[i-1][j+1] == 1:
            cnt += 1
        if i+1 < nr and j-1 >= 0 and dup[i+1][j-1] == 1:
            cnt += 1
        if i+1 < nr and j+1 < nc and dup[i+1][j+1] == 1:
            cnt += 1
        return cnt


    nr = len(board)
    nc = len(board[0])
    dup = [[0]*nc for _ in range(nr)]

    for i in range(nr):
        for j in range(nc):
            dup[i][j] = board[i][j]

    for i in range(nr):
        for j in range(nc):
            if dup[i][j] == 1:
                live = livecnt(i, j, dup)
                if live == 2 or live == 3:
                    board[i][j] = 1
                else:
                    board[i][j] = 0
            else:
                live = livecnt(i, j, dup)
                if live == 3:
                    board[i][j] = 1
                else:
                    board[i][j] = 0  
